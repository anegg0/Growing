@page "/addtray"
@using Growing.Shared.Models
@using System
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Forms
@inject HttpClient HttpClient
@inject NavigationManager urlNavigationManager

<h1>Create Tray</h1>
<hr />

<EditForm Model="@tray" OnValidSubmit="CreateTray">
    <DataAnnotationsValidator />
    <div class="form-group row">
        <label class="control-label col-md-12">Name</label>
        <div class="col-md-4">
            <input class="form-control" @bind="tray.Name" />
        </div>
        <ValidationMessage For="@(() => tray.Name)" />
    </div>

    <div class="form-group row">
        <label class="control-label col-md-12">Gender</label>
        <div class="col-md-4">
            @if (trayTypeList == null)
            {
<<<<<<< HEAD
            <option value="@i">@trayType[i].Name</option>
            }
        </select>
        }
=======
                <select class="custom-select" disabled>
                    <option>(loading...)</option>
                </select>
            }
            else
            {
                <select class="custom-select" @onchange="ToppingSelected">
                    trayTypeList[1].Name
                    @*<option value="-1" disabled selected>(select)</option>
                    @for (var i = 0; i < trayTypeList.Count; i++)
                    {
                        <option value="@i">@trayTypeList[i].Name</option>
                    }*@
                </select>
            }
        </div>
            @*<option value="">-- Select Gender --</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            </select>
        </div>
        <ValidationMessage For="@(() => tray.Gender)" />*@*@
>>>>>>> 981c184acda3dd2a641506d30f8a1edc8437d39f
    </div>

    <div class="form-group row">
        <label class="control-label col-md-12">Department</label>
        <div class="col-md-4">
            <input class="form-control" @bind="tray.Department" />
        </div>
        <span><ValidationMessage For="@(() => tray.Department)" /></span>
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">City</label>
        <div class="col-md-4">
            <input class="form-control" @bind="tray.City" />
        </div>
        <span><ValidationMessage For="@(() => tray.City)" /></span>
    </div>
    <div class="form-group row">
        <label class="control-label col-md-12">Sowing Date</label>
        <div class="col-md-4">
            <input class="form-control" @bind="tray.SowingDate" />
        </div>
        <ValidationMessage For="@(() => tray.SowingDate)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>

@code {

    Tray tray = new Tray();

    TrayType[] trayTypeList;


    protected override async Task OnInitializedAsync()
    {
        trayTypeList = await HttpClient.GetFromJsonAsync<TrayType[]>("/api/TrayType/Index");
        System.Console.WriteLine("pouet" + trayTypeList[1].Name);
    }

    void AddTopping(TrayType[] trayTypeList)
    {
        @for (var i = 0; i < 10; i++)
        {
            if (trayTypeList[i].Name == null)
            {
                trayType.Toppings.Add(new PizzaTopping() { TrayType = topping });
            }
        }
    }

    void ToppingSelected(ChangeEventArgs e)
    {
        if (int.TryParse((string)e.Value, out var index) && index >= 0)
        {
            AddTopping(trayTypeList[index]);
        }
    }


    protected async Task CreateTray()
    {
        await HttpClient.PostAsJsonAsync("/api/Tray/Create", tray);
        urlNavigationManager.NavigateTo("/fetchtray");
    }

    void Cancel()
    {
        urlNavigationManager.NavigateTo("/fetchtray");
    }
}
